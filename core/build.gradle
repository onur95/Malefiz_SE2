apply plugin: "java"

targetCompatibility = 1.7
sourceCompatibility = 1.7
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

sourceSets.main.java.srcDirs = ["src/"]
sourceSets.test.java.srcDirs = ["src"]
//sourceSets.main.java.srcDirs = [ "src/com/mygdx/malefiz/Tests/" ]

dependencies {
    // Required -- JUnit 4 framework
    testCompile 'junit:junit:4.12'
    // Optional -- Mockito framework
    testCompile 'org.mockito:mockito-core:1.10.19'
    compile 'org.testng:testng:6.9.6'
    compile 'junit:junit:4.12'
}


eclipse.project {
    name = appName + "-core"
}


apply plugin: 'jacoco'
jacoco {
    toolVersion = '0.7.6.201602180812'
}

// Edit covered scope if needed
// For my part I like having the coverage of both application and tests
def coverageSourceDirs = [
        'src'
]

task jacocoTestReport(type: JacocoReport, dependsOn: "test") {
    group = "Reporting"

    description = "Generate Jacoco coverage reports "

    classDirectories = fileTree(
            dir: '../android/build/intermediates/classes',
            excludes: ['**/R.class',
                       '**/R$*.class',
                       '**/*$ViewInjector*.*',
                       '**/BuildConfig.*',
                       '**/Manifest*.*']
    )

    additionalSourceDirs = files(coverageSourceDirs)
    sourceDirectories = files(coverageSourceDirs)
    executionData = files('../android/build/jacoco/testReleaseUnitTest.exec ')

    reports {
        xml.enabled = true
        html.enabled = true
    }
}